{"componentChunkName":"component---src-templates-question-js","path":"/array-object-efficiency/","result":{"data":{"site":{"siteMetadata":{"title":"1977 JavaScript Quizzes","author":"duthaho"}},"markdownRemark":{"id":"40759a4f-20aa-59e4-9a18-1e1b9a0101e5","excerpt":"Cả hai cách  và  đều tạo ra object cùng thuộc tính và giá trị. Theo bạn thì phương án nào tốt hơn? Nhiều bạn nghĩ rằng đây là thời đại của ES2015 rồi, dùng  sẽ…","html":"<p>Cả hai cách <code class=\"language-text\">a</code> và <code class=\"language-text\">b</code> đều tạo ra object cùng thuộc tính và giá trị. Theo bạn thì phương án nào tốt hơn?</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> el<span class=\"token punctuation\">,</span> i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>acc<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>el<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> i <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  b<span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<!-- explanation -->\n<p>Nhiều bạn nghĩ rằng đây là thời đại của ES2015 rồi, dùng <code class=\"language-text\">reduce</code> sẽ gọn và tối ưu hơn. Nhưng hãy nhìn kỹ vào code, với phương án <code class=\"language-text\">b</code>, qua mỗi vòng lặp ta chỉ việc set một thuộc tính mới vào <code class=\"language-text\">b</code>, còn ở phương án <code class=\"language-text\">a</code>, với mỗi lần lặp, spread operator (<code class=\"language-text\">...</code>) sẽ tạo ra thêm một shallow copy của <code class=\"language-text\">acc</code> và sau đó mới set một thuộc tính mới, điều này rõ ràng làm tốn bộ nhớ và không tối ưu.</p>","frontmatter":{"title":"Array-to-Object Efficiency","answers":["a","b // correct"],"date":"2019-09-29"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/array-object-efficiency/","previous":{"fields":{"slug":"/array-sort-comparison/"},"frontmatter":{"title":"Array Sort Comparison","date":"2019-11-21"}},"next":{"fields":{"slug":"/array-method-callbacks/"},"frontmatter":{"title":"Array Method Callbacks","date":"2019-11-21"}}}}}