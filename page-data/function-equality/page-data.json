{"componentChunkName":"component---src-templates-question-js","path":"/function-equality/","result":{"data":{"site":{"siteMetadata":{"title":"1977 JavaScript Quizzes","author":"duthaho"}},"markdownRemark":{"id":"96c3ab73-5c6e-5940-896c-0edb7961858b","excerpt":"What gets logged when we test the following equality scenarios? In the first test,  and  are different objects in memory; it doesn't matter that the parametersâ€¦","html":"<p>What gets logged when we test the following equality scenarios?</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">a</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">c</span> <span class=\"token operator\">=></span> c<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">b</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">c</span> <span class=\"token operator\">=></span> c<span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<!-- explanation -->\n<p>In the first test, <code class=\"language-text\">a</code> and <code class=\"language-text\">b</code> are different objects in memory; it doesn't matter that the parameters and return values in each function definition are identical. Therefore, <code class=\"language-text\">a</code> is not equal to <code class=\"language-text\">b</code>. In the second test, <code class=\"language-text\">a(7)</code> returns the number <code class=\"language-text\">7</code> and <code class=\"language-text\">b(7)</code> returns the number <code class=\"language-text\">7</code>. These primitive types are strictly equal to each other.</p>\n<p>In this case, the equality (<code class=\"language-text\">==</code>) vs identity (<code class=\"language-text\">===</code>) comparison operators don't matter; no type coercion will affect the result.</p>","frontmatter":{"title":"Function Equality","answers":["true true","true false","false true // correct","false false"],"date":"2019-09-29"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/function-equality/","previous":{"fields":{"slug":"/object-property-equality/"},"frontmatter":{"title":"Object Property Equality","date":"2019-09-29"}},"next":{"fields":{"slug":"/basic-recursion/"},"frontmatter":{"title":"Basic Recursion","date":"2019-09-29"}}}}}