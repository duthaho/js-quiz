{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"1977 JavaScript Quizzes","siteUrl":"https://quiz.duthaho.com","social":{"facebook":{"appId":"1476613389154628"}}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"Kết quả là gì? Đoạn code này trông có vẻ đơn giản, nếu biến global  chưa có phần tử  thì định nghĩa biến , gán cho nó bằng . Bạn sẽ nghĩ kết…","fields":{"slug":"/global-window/"},"frontmatter":{"title":"Global window","date":"2020-02-11"}}},{"node":{"excerpt":"Kết quả là gì?  là một object đặc biệt trong function của JavaScript, nó chứa các params của function và share chung bộ nhớ với chúng, vì…","fields":{"slug":"/function-agruments/"},"frontmatter":{"title":"Function Agruments","date":"2020-02-11"}}},{"node":{"excerpt":"Kết quả là gì? this context trong JavaScript tùy theo ngữ cảnh lúc gọi hàm. Chúng ta có thể thay đổi  của hàm bằng cách dùng hàm , với tham…","fields":{"slug":"/this-context-2/"},"frontmatter":{"title":"This Context 2","date":"2020-02-11"}}},{"node":{"excerpt":"Kết quả là gì? Trong JavaScript Array, khi set một thuộc tính cho một array, nếu thuộc tính đó là một  thì  của array đó sẽ được tính toán…","fields":{"slug":"/array-length/"},"frontmatter":{"title":"Array Length","date":"2020-01-12"}}},{"node":{"excerpt":"Kết quả là gì? Operator  sẽ có độ ưu tiên cao hơn operator  vì thế  sẽ được thực hiện trước. Khi  number với boolean hoặc 2 boolean với nhau…","fields":{"slug":"/boolean-type-conversion/"},"frontmatter":{"title":"Boolean Type Conversion","date":"2020-01-12"}}},{"node":{"excerpt":"Kết quả là gì? Theo operator precedence, các lời gọi function sẽ có độ ưu tiên cao hơn operator , vì vậy  sẽ thực hiện trước, ta có thể viết…","fields":{"slug":"/function-precedence/"},"frontmatter":{"title":"Function Precedence","date":"2020-01-12"}}},{"node":{"excerpt":"Kết quả là gì?  sẽ kiểm tra 1 thuộc tính có phải là của object đó hay không, một array cũng là một object và có các thuộc tính index (), vậy…","fields":{"slug":"/in-operator/"},"frontmatter":{"title":"In Operator","date":"2020-01-12"}}},{"node":{"excerpt":"Kết quả là gì? Trong JavaScript cũng có  nên đoạn code trên không có lỗi gì đâu nhé. Phần tử   và  không có trong object  nên ta có thể viết…","fields":{"slug":"/labeling/"},"frontmatter":{"title":"Labeling","date":"2020-01-12"}}},{"node":{"excerpt":"Kết quả là gì? Chúng ta có thể khai báo  cùng với  và dùng  bên trong function đó để gọi tới chính nó. Nhưng chúng ta không thể dùng  bên…","fields":{"slug":"/named-function/"},"frontmatter":{"title":"Named Functions","date":"2020-01-12"}}},{"node":{"excerpt":"Kết quả là gì? Postfix Operator  chỉ thực hiện với biến, trong trường hợp này  không phải là biến nên sẽ gây ra lỗi . Nếu đoạn code trên…","fields":{"slug":"/postfix-operation/"},"frontmatter":{"title":"Postfix Operation","date":"2020-01-12"}}},{"node":{"excerpt":"Kết quả là gì? Khi gọi String constructor function với từ khóa  sẽ cho kết quả là một object, trong khi đó, không có từ khóa  kết quả sẽ là…","fields":{"slug":"/string-constructor/"},"frontmatter":{"title":"String Constructor","date":"2020-01-12"}}},{"node":{"excerpt":"Kết quả là gì?  sẽ chuyển đổi keys của object sang string  và  sẽ giữ nguyên values của object .","fields":{"slug":"/object-keys/"},"frontmatter":{"title":"Object Keys","date":"2019-11-24"}}},{"node":{"excerpt":"Kết quả là gì? Các toán tử  và  có cùng độ ưu tiên và sẽ được thực hiện từ trái qua phải. Dòng đầu tiên chúng ta có thể viết lại như sau…","fields":{"slug":"/operator-associativity/"},"frontmatter":{"title":"Operator Associativity","date":"2019-11-24"}}},{"node":{"excerpt":"Kết quả là gì Promise.all không quan tâm đến thứ tự thời gian hoàn thành xong các Promise, nó sẽ chờ cho tất cả các Promise hoàn thành xong…","fields":{"slug":"/promise-all/"},"frontmatter":{"title":"Promise All","date":"2019-11-24"}}},{"node":{"excerpt":"Kết quả là gì? Promise.race() sẽ trả về kết quả của một Promise nào hoàn thành trước. Trong ví dụ trên,  sẽ hoàn thành trước, nó sẽ gọi  sau…","fields":{"slug":"/promise-race/"},"frontmatter":{"title":"Promise Race","date":"2019-11-24"}}},{"node":{"excerpt":"Kết quả là gì? Khi gọi đến thuộc tính hay phương thức của một object, đầu tiên nó sẽ tìm trong object trước, nếu không tìm thấy, mới tiếp…","fields":{"slug":"/prototype-2/"},"frontmatter":{"title":"Prototype 2","date":"2019-11-24"}}},{"node":{"excerpt":"Kết quả là gì?  sẽ thực hiện deep copy trên object . Tất cả các thuộc tính là các kiểu dữ liệu nguyên thủy (Boolean, String, Number) sẽ được…","fields":{"slug":"/json/"},"frontmatter":{"title":"JSON","date":"2019-11-24"}}},{"node":{"excerpt":"Kết quả là gì?  sẽ thực hiện một  trên object , bất kỳ thuộc tính nào của  là object đều tham chiếu đến cùng thuộc tính trong . Vì vậy khi…","fields":{"slug":"/object-assign/"},"frontmatter":{"title":"Object Assign","date":"2019-11-24"}}},{"node":{"excerpt":"Kết quả là gì? Hàm  của array cho phép chúng ta truyền vào một giá trị ban đầu ở tham số thứ hai, trong trường hợp này là  và ta có các bước…","fields":{"slug":"/array-reduce-2/"},"frontmatter":{"title":"Array Reduce 2","date":"2019-11-23"}}},{"node":{"excerpt":"Kết quả là gì?  trong một  không được  như trong một function bình thường mà  được thừa hưởng từ scope bên ngoài của nó (). Đó là lý do tại…","fields":{"slug":"/arrow-functions/"},"frontmatter":{"title":"Arrow Functions","date":"2019-11-23"}}},{"node":{"excerpt":"Kết quả là gì?  là khi một inner function có thể ghi nhớ và truy cập đến các thành phần ở scope của outer function, thậm chí outer function…","fields":{"slug":"/closure-hoisting/"},"frontmatter":{"title":"Closure - Hoisting","date":"2019-11-23"}}},{"node":{"excerpt":"Kết quả là gì? Date Constructor  trong JavaScript được dùng để tạo một date object, dựa vào tham số đầu vào mà sẽ cho các kết quả khác nhau…","fields":{"slug":"/date-constructor/"},"frontmatter":{"title":"Date Constructor","date":"2019-11-23"}}},{"node":{"excerpt":"Kết quả là gì? Tùy vào environment bạn chạy đoạn code trên mà kết quả sẽ khác nhau. Nếu chạy trên trình duyệt đã hổ trợ fetch thì kết quả là…","fields":{"slug":"/fetch/"},"frontmatter":{"title":"Fetch","date":"2019-11-23"}}},{"node":{"excerpt":"Kết quả là gì? Cơ chế  trong JavaScript được áp đụng khi khai báo biến () và khai báo function (), trừ khi gán một function cho biến…","fields":{"slug":"/function-hoisting/"},"frontmatter":{"title":"Function Hoisting","date":"2019-11-23"}}},{"node":{"excerpt":"Kết quả là gì? Trong JavaScript, khi sử dụng Triple Equals () thì  và  chỉ cho kết quả  khi so sánh với chính nó,  thì luôn cho kết quả  khi…","fields":{"slug":"/null-undefined-nan/"},"frontmatter":{"title":"Null - Undefined - NaN","date":"2019-11-23"}}},{"node":{"excerpt":"Kết quả là gì? Như chúng ta đã biết trong hệ thập phân, chúng ta không thể biểu diễn chính xác  dưới dạng dấu phẩy động (). Kết quả của…","fields":{"slug":"/floating-point/"},"frontmatter":{"title":"Floating-Point","date":"2019-11-23"}}},{"node":{"excerpt":"Kết quả là gì? Toán tử  sẽ dừng và trả về kết quả  nếu gặp bất kỳ điều kiện nào sai, vì thế  sẽ trả về . Nếu bạn muốn ví dụ trên chạy đúng…","fields":{"slug":"/logical-operators/"},"frontmatter":{"title":"Logical Operators","date":"2019-11-23"}}},{"node":{"excerpt":"Kết quả là gì? Để tránh bất kỳ sự thay đổi nào trên các thuộc tính của một object, ta có thể dùng hàm , tuy nhiên hàm này chỉ có thể thực…","fields":{"slug":"/object-freeze/"},"frontmatter":{"title":"Object Freeze","date":"2019-11-23"}}},{"node":{"excerpt":"Kết quả là gì? Nếu key trong object là number thì  sẽ sắp xếp lại các value theo thứ tự, với key không phải number thì thứ tự vẫn được giữ…","fields":{"slug":"/object-values/"},"frontmatter":{"title":"Object Values","date":"2019-11-23"}}},{"node":{"excerpt":"Kết quả là gì? Toán tử  (Postfix Increment) được ưu tiên hơn toán tử , đầu tiên toán tử Postfix Increment sẽ chuyển đổi  từ string  sang…","fields":{"slug":"/operation-precedence/"},"frontmatter":{"title":"Operation Precedence","date":"2019-11-23"}}},{"node":{"excerpt":"Kết quả là gì? Khi chúng ta truyền tham số vào một function là một kiểu dữ liệu tham chiếu () thì những thay đổi đối với tham số bên trong…","fields":{"slug":"/reference-types/"},"frontmatter":{"title":"Reference Types","date":"2019-11-23"}}},{"node":{"excerpt":"Kết quả là gì? Mặc dù trông có vẻ hai function trong ví dụ trên hoàn toàn giống nhau. Nhưng JavaScript có một số quy tắc để tự động thêm vào…","fields":{"slug":"/semicolon/"},"frontmatter":{"title":"Semicolon","date":"2019-11-23"}}},{"node":{"excerpt":"Kết quả là gì? Rõ ràng  và  sẽ được in ra đầu tiên vì  mà không có delay.\n sẽ được in ra sau  vì  bị delay 1 giây còn  bị delay sau 0 giây…","fields":{"slug":"/set-timeout/"},"frontmatter":{"title":"Set Timeout","date":"2019-11-23"}}},{"node":{"excerpt":"Kết quả là gì? Trong JavaScript, mảng rỗng  và function là . Nhưng chú ý ở ví dụ trên, function này được thực thi và nó trả về .","fields":{"slug":"/template-literals/"},"frontmatter":{"title":"Template Literals","date":"2019-11-23"}}},{"node":{"excerpt":"Kết quả là gì? Object, Array và Number đều là các Function Constructor, chúng dùng để tạo ra các object với từ khóa .","fields":{"slug":"/typeof/"},"frontmatter":{"title":"Typeof","date":"2019-11-23"}}},{"node":{"excerpt":"Kết quả là gì? Biến  sẽ được  bên trong function, chúng ta có thể xem function được thực thi như sau:","fields":{"slug":"/variable-hoisting/"},"frontmatter":{"title":"Variable Hoisting","date":"2019-11-23"}}},{"node":{"excerpt":"Kết quả là gì? Khi muốn truy cập đến một thuộc tính hay method của một object ta có thể dùng dot notation (một dấu ), còn đối với number, ta…","fields":{"slug":"/number-with-dots/"},"frontmatter":{"title":"Number With Dots","date":"2019-11-23"}}},{"node":{"excerpt":"Kết quả là gì? Chúng ta đã biết cả hai hàm  và  đều được dùng để thay đổi this context của hàm. Tuy nhiên, với  thì hàm sẽ được gọi ngay lập…","fields":{"slug":"/bind-call/"},"frontmatter":{"title":"Bind - Call","date":"2019-11-22"}}},{"node":{"excerpt":"Kết quả là gì?  là hàm được gọi ngay lập tức lúc khai báo, có cú pháp như trong ví dụ trên . Ở đây hàm  trả về một  và nó được gọi ngay lập…","fields":{"slug":"/immediately-invoked-function/"},"frontmatter":{"title":"Immediately Invoked Function","date":"2019-11-22"}}},{"node":{"excerpt":"Kết quả là gì? Khi gọi một Function Constructor,  sẽ được tạo và trả về một cách ngầm định nếu chúng ta gọi bằng từ khóa , nếu không  sẽ…","fields":{"slug":"/function-constructor/"},"frontmatter":{"title":"Function Constructor","date":"2019-11-22"}}},{"node":{"excerpt":"Kết quả là gì? Nếu bạn có một object với nhiều keys có cùng tên, thì chúng sẽ được đè lên nhau, giá trị chính là giá trị sau cùng nhưng thứ…","fields":{"slug":"/object-duplicate-keys/"},"frontmatter":{"title":"Object Duplicate Keys","date":"2019-11-22"}}},{"node":{"excerpt":"Kết quả là gì? Tất cả các keys của một object đểu được tự động chuyển thành string (trừ ). Vì thế  cho kết quả . Nhưng điều đó không đúng…","fields":{"slug":"/object-string-keys/"},"frontmatter":{"title":"Object String Keys","date":"2019-11-22"}}},{"node":{"excerpt":"Kết quả là gì? Tất cả các keys của một object đểu được tự động chuyển thành string (trừ ). Khi một object chuyển sang string, nó có giá trị…","fields":{"slug":"/object-string-keys-2/"},"frontmatter":{"title":"Object String Keys 2","date":"2019-11-22"}}},{"node":{"excerpt":"Kết quả là gì? Khi tìm hiểu về prototype trong JavaScript, muốn thêm một function vào prototype và share cho tất cả các object dùng chung…","fields":{"slug":"/prototype/"},"frontmatter":{"title":"Prototype","date":"2019-11-22"}}},{"node":{"excerpt":"Kết quả là gì? Trong JavaScript, khi một function được thực thi, sẽ trải qua hai giai đoạn. Giao đoạn đầu tiên là , ở giai đoạn này, các…","fields":{"slug":"/var-and-let/"},"frontmatter":{"title":"Var And Let","date":"2019-11-22"}}},{"node":{"excerpt":"Kết quả là gì? Trong ví dụ trên,  là một function shorthand bình thường, còn  là arrow function. Khi tìm hiểu về this context trong…","fields":{"slug":"/this-context/"},"frontmatter":{"title":"This Context","date":"2019-11-22"}}},{"node":{"excerpt":"Function dưới đây luôn luôn trả về phần tử lớn nhất trong array đúng không? Coi chừng bị lừa nhé, function trên chỉ đúng trong trường hợp…","fields":{"slug":"/array-loop/"},"frontmatter":{"title":"Array Loop","date":"2019-11-21"}}},{"node":{"excerpt":"Kết quả là gì? Hàm  sẽ sắp xếp lại array và đồng thời trả về chính tham chiếu đến array đó. Vì vậy  và  tham chiếu đến cùng một object trong…","fields":{"slug":"/array-sort/"},"frontmatter":{"title":"Array Sort","date":"2019-11-21"}}},{"node":{"excerpt":"Kết quả là gì? Bạn nghĩ là  à, không, bạn nên xem lại cách hoạt động của Array constructor, khi truyền vào một tham số là number từ 0 đến (…","fields":{"slug":"/array-constructor/"},"frontmatter":{"title":"Array Constructor","date":"2019-11-21"}}},{"node":{"excerpt":"Kết quả là gì? Hàm  (tương tự cho  và ) trong JavaScript cho phép chúng ta thay đổi ngữ cảnh của biến  (this context). Trong trường hợp này…","fields":{"slug":"/this-binding/"},"frontmatter":{"title":"This Binding","date":"2019-11-21"}}},{"node":{"excerpt":"Kết quả là gì? Khi so sánh Double Equals () giữa array và number, JavaScript sẽ chuyển đổi array sang number trước khi so sánh ( và ), vì…","fields":{"slug":"/array-compare-2/"},"frontmatter":{"title":"Array Compare 2","date":"2019-11-20"}}},{"node":{"excerpt":"Kết quả là gì? Khi so sánh Double Equals () giữa array và string, cụ thể là  hoặc  với , JavaScript sẽ tự động gọi  để chuyển đổi array sang…","fields":{"slug":"/array-compare/"},"frontmatter":{"title":"Array Compare","date":"2019-11-20"}}},{"node":{"excerpt":"Kết quả là gì? Trong JavaScript, các array (rỗng hoặc có phần tử) đều là , tức là khi chúng ta kiểm tra với điều kiện  sẽ cho kết quả là…","fields":{"slug":"/array-type-conversion/"},"frontmatter":{"title":"Array Type Conversion","date":"2019-11-20"}}},{"node":{"excerpt":"Kết quả là gì?  được dùng để lưu trữ dữ liệu mà các phần tử trong  là duy nhất (unique). Tuy nhiên, nên chú ý với các trường hợp dữ liệu là…","fields":{"slug":"/set/"},"frontmatter":{"title":"Set","date":"2019-11-20"}}},{"node":{"excerpt":"Kết quả là gì? Đấu tiên gán  cho biến . Với toán tử  (assignment) thì chúng ta quan tâm toán hạng bên phải trước (right side assignment):…","fields":{"slug":"/object-destructing/"},"frontmatter":{"title":"Object Destructuring","date":"2019-11-20"}}},{"node":{"excerpt":"Consider the following two arrays and operations on them. What gets logged as a result of script execution ?  có nghĩa  và  cùng tham chiếu…","fields":{"slug":"/array-reverse/"},"frontmatter":{"title":"Arrays Reverse","date":"2019-10-08"}}},{"node":{"excerpt":"Cả hai cách  và  đều tạo ra object cùng thuộc tính và giá trị. Theo bạn thì phương án nào tốt hơn? Nhiều bạn nghĩ rằng đây là thời đại của…","fields":{"slug":"/array-reduce/"},"frontmatter":{"title":"Array Reduce","date":"2019-09-29"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}}