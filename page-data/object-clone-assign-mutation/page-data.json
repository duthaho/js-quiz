{"componentChunkName":"component---src-templates-question-js","path":"/object-clone-assign-mutation/","result":{"data":{"site":{"siteMetadata":{"title":"1977 JavaScript Quizzes","author":"duthaho"}},"markdownRemark":{"id":"7f47a645-4131-5ad9-87d4-4e3ed3275913","excerpt":"Consider objects  and  below. What gets logged? Setting  will perform a shallow copy of object . Since  is a shallow copy, any fields in  of the type \"objectâ€¦","html":"<p>Consider objects <code class=\"language-text\">a</code> and <code class=\"language-text\">b</code> below. What gets logged?</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> \n  stringField<span class=\"token punctuation\">:</span> <span class=\"token string\">'Joe'</span><span class=\"token punctuation\">,</span>\n  nestedField<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>field<span class=\"token punctuation\">:</span> <span class=\"token string\">'Nested'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">functionField</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'aReturn'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nb<span class=\"token punctuation\">.</span>stringField <span class=\"token operator\">=</span> <span class=\"token string\">'Bob'</span>\nb<span class=\"token punctuation\">.</span>nestedField<span class=\"token punctuation\">.</span>field <span class=\"token operator\">=</span> <span class=\"token string\">'Changed'</span>\nb<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">functionField</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token string\">'bReturn'</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n  a<span class=\"token punctuation\">.</span>stringField<span class=\"token punctuation\">,</span>\n  a<span class=\"token punctuation\">.</span>nestedField<span class=\"token punctuation\">.</span>field<span class=\"token punctuation\">,</span>\n  a<span class=\"token punctuation\">.</span><span class=\"token function\">functionField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<!-- explanation -->\n<p>Setting <code class=\"language-text\">b = Object.assign({},a);</code> will perform a shallow copy of object <code class=\"language-text\">a</code>. Since <code class=\"language-text\">b</code> is a shallow copy, any fields in <code class=\"language-text\">b</code> of the type \"object\", including Date objects, will be a ref to the field in <code class=\"language-text\">a</code>. However, unlike using <code class=\"language-text\">JSON.parse</code> and <code class=\"language-text\">JSON.stringify</code> to clone an object, <code class=\"language-text\">Object.assign</code> will work with non valid JSON values such as Functions and Symbols. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Examples\">MDN Description</a> for a more detailed explanation.</p>","frontmatter":{"title":"Object Cloning (Object.assign) Comparison","answers":["Joe Nested aReturn","Bob Changed bReturn","Joe Changed aReturn // correct","Bob Nested bReturn"],"date":"2019-10-05"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/object-clone-assign-mutation/","previous":{"fields":{"slug":"/combining-different-types/"},"frontmatter":{"title":"Combining Different Types","date":"2019-10-05"}},"next":{"fields":{"slug":"/object-clone-stringify/"},"frontmatter":{"title":"Object Cloning (JSON.parse + JSON.stringify) Comparison","date":"2019-10-05"}}}}}