{"componentChunkName":"component---src-templates-question-js","path":"/object-clone-stringify/","result":{"data":{"site":{"siteMetadata":{"title":"1977 JavaScript Quizzes","author":"duthaho"}},"markdownRemark":{"id":"59f8bcf8-cd68-5b08-8501-e8efeded7626","excerpt":"Consider objects  and  below. What gets logged? Setting  will perform a deep copy of object . All primitive Javascript types (Boolean, String, and Number) willâ€¦","html":"<p>Consider objects <code class=\"language-text\">a</code> and <code class=\"language-text\">b</code> below. What gets logged?</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> \n  stringField<span class=\"token punctuation\">:</span> <span class=\"token string\">'Joe'</span><span class=\"token punctuation\">,</span>\n  numberField<span class=\"token punctuation\">:</span> <span class=\"token number\">123</span><span class=\"token punctuation\">,</span>\n  dateField<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1995-12-17T03:24:00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  nestedField<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>field<span class=\"token punctuation\">:</span> <span class=\"token string\">'Nested'</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>\n  a<span class=\"token punctuation\">.</span>stringField <span class=\"token operator\">===</span> b<span class=\"token punctuation\">.</span>stringField<span class=\"token punctuation\">,</span>\n  a<span class=\"token punctuation\">.</span>numberField <span class=\"token operator\">===</span> b<span class=\"token punctuation\">.</span>numberField<span class=\"token punctuation\">,</span>\n  a<span class=\"token punctuation\">.</span>dateField <span class=\"token operator\">===</span> b<span class=\"token punctuation\">.</span>dateField<span class=\"token punctuation\">,</span>\n  a<span class=\"token punctuation\">.</span>nestedField<span class=\"token punctuation\">.</span>field <span class=\"token operator\">===</span> b<span class=\"token punctuation\">.</span>nestedField<span class=\"token punctuation\">.</span>field\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<!-- explanation -->\n<p>Setting <code class=\"language-text\">b = JSON.parse(JSON.stringify(a))</code> will perform a deep copy of object <code class=\"language-text\">a</code>. All primitive Javascript types (Boolean, String, and Number) will be copied correctly. However, non-valid JSON values (Date, undefined, Function, and other non-primitives) will not be copied correctly. In this instance, <code class=\"language-text\">JSON.stringify</code> will convert the Date object into an ISO string and it will remain a string when the stringified JSON is re-parsed. Since the two fields are different data types (Date object vs. string), the equality will yield false. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#Description\">MDN Description</a> for a more detailed explanation.</p>","frontmatter":{"title":"Object Cloning (JSON.parse + JSON.stringify) Comparison","answers":["true true true true","true true true false","true true false true // correct","false false false false"],"date":"2019-10-05"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/object-clone-stringify/","previous":{"fields":{"slug":"/object-clone-assign-mutation/"},"frontmatter":{"title":"Object Cloning (Object.assign) Comparison","date":"2019-10-05"}},"next":{"fields":{"slug":"/object-clone-stringify-mutation/"},"frontmatter":{"title":"Object Cloning (JSON.parse + JSON.stringify)","date":"2019-10-05"}}}}}